{"version":3,"file":"contentScript.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./src/contentScript/contentScript.tsx"],"sourcesContent":["\"use strict\";\nwindow.onload = () => {\n    console.log(\"chay contentScript\");\n};\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    console.log(\"chay\");\n});\nchrome.runtime.onMessage.addListener((msg, sender, callback) => {\n    if (msg) {\n        if (msg.message === \"ADD\") {\n            var event = new Event(\"input\", { bubbles: true });\n            let a = document.querySelector(\"#HoTen\");\n            a?.setAttribute(\"value\", msg.data.Name);\n            a.value = msg.data.Name;\n            a?.dispatchEvent(event);\n            let b = document.querySelector(\"#NgaySinh\");\n            b?.setAttribute(\"value\", msg.data.NgaySinh);\n            b.value = msg.data.NgaySinh;\n            b?.dispatchEvent(event);\n            let c = document.querySelector(\"#submit\");\n            c?.click();\n        }\n    }\n});\n// const delay = (ms: number | undefined) =>\n//   new Promise((res) => setTimeout(res, ms));\n// function waitForNotElm(selector: any) {\n//   return new Promise((resolve) => {\n//     if (!document.querySelector(selector)) {\n//       return \"ok\";\n//     }\n//     const observer = new MutationObserver(() => {\n//       if (!document.querySelector(selector)) {\n//         observer.disconnect();\n//         resolve(\"ok\");\n//       }\n//     });\n//     // If you get \"parameter 1 is not of type 'Node'\" error, see https://stackoverflow.com/a/77855838/492336\n//     observer.observe(document.body, {\n//       childList: true,\n//       subtree: true,\n//     });\n//   });\n// }\n// function waitForElm(selector: any) {\n//   return new Promise((resolve) => {\n//     if (document.querySelector(selector)) {\n//       return resolve(document.querySelector(selector));\n//     }\n//     const observer = new MutationObserver(() => {\n//       if (document.querySelector(selector)) {\n//         observer.disconnect();\n//         resolve(document.querySelector(selector));\n//       }\n//     });\n//     // If you get \"parameter 1 is not of type 'Node'\" error, see https://stackoverflow.com/a/77855838/492336\n//     observer.observe(document.body, {\n//       childList: true,\n//       subtree: true,\n//     });\n//   });\n// }\n"],"names":[],"sourceRoot":""}